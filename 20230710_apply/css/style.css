/* 전체선택자 *(asterisk) 모두 부르는 것임
why? 기존 가지고있던 margin 뻇고 그 후, 내가 값 주는 것임 
이것을 우리는 CSS reset 맨 처음에 한다.
박스사이즈 논할때는 border값을 기준으로 하자
내용 들어가는 영역: content-box (이게 기본 값인데 늘어나니 border-box로 바꾸는 것임)
보더의 끝 박스: border-box 이때 쓰는 게 전체선택자

p.2 css정리파일 오타 action(x) active(o)

html에서 등장하는 순서로 css 순서 같게 해야 찾기 쉬움*/
* {
   margin: 0;
   padding: 0;
   box-sizing: border-box;
}

#box1>p:first-child {
   color: purple;
}

#box1>p:nth-child(2) {
   color: yellow;
}

/* 이 안에서 n번째만 선택하고 싶을 때 css정리 p.2(사용빈도수**) 
만약 내용 바뀌면 순서가 바뀌니 떄이다.
n: nature number 자연수*/

#box2>p:nth-child(3n) {
   color: orange;
}

 /* 짝수번째 2n, 홀수 2n-1, 3의 배수 3n 3n+1 등가능 1차방정식만 가능 2차방정식 불가능
 짝수 even, 홀수 odd */

#box3>p:first-of-type {
   color: red;
}

/* 기본색을 정해놓는 것 color 
child중 1번째 & p태그는 없으니 색 변하지 않음
#box3>p:first-child {
   color: red;
}

#box3>p:first-of-type {
   color: red;
} p중에서 첫번째라서 반응함

*/

#grade {
   margin: 30px;
   border-collapse: collapse;
   border-top: 1px solid blue;
}
#grade th, 
#grade td {
   border-bottom: 1px solid red;
   border-right: 1px solid green; 
}

#spec {
   margin: 20px;
   border-collapse: collapse;
   border-top: blue;
}
#spec th, 
#spec td {
   padding: 0.2em;
   border-bottom: 1px solid red;
   border-right: 1px solid green;
}

#spec th {
   background-color: antiquewhite;
}
/* 부모의 글자대비 em 퍼센트
쓰는 이유 모바일, 웹 글자 다르고 화면 비례해서 해야하니
단위를 px 아닌 상대단위 em을 자주 쓴다. */

#spec th:last-child, 
#spec td:last-child {
   border-right: none;
}

/* 왜 한글로 만드는게 더 빠른데 만드나?
새로운 컬러 크기 모양이 바뀔 수 있음 그에 따라 스타일도 따라감
그래서 이걸로 표 만듦 */

/* (순서) 두깨, 종류(solid, dotted,..), 색깔 */

#grade th:last-of-type, 
#grade td:last-of-type {
   border-right: none;
}

/*
css를 이용해서 hrml의 모양, 색, 크기를 적용하려면
html 선택해야된다.
선택하는 방법 = id(#), class(.), tag



td{
    color: red;
}
*/
/* #p1 {color: red;} */
/* .p2 {color: red;} 
여러개 한꺼번에 할 때*/
#p1, .p2 {color: red;}
/* #p1, 
.p2 {color: red;} 이렇게도 씀 최대한 가독성 좋게 쓰기 */

/* 띄어쓰기 함부로하면 안됨 자식 선택자로 됨 */

#parent>p {  /* 자식선택. 많이 쓰임 */
   color: yellow;
}

#apply:hover { /* */
   cursor: grab;
}
#apply:active {
   cursor: grabbing;
}

#resume td { 
   border: 1px solid orange;
}
/* 이렇게 쓰면 틀림 #resume>tr>td #resume>tbody>tr>td { 
why? tr은 table 자식이 아니기 때문 사이에 tbody
후손 td들아! 할수도있지 띄어쓰기하고 바로 쓰면됨***활용빈도 ***별3개!!! 엄청 중요!
자식선택자>, 자손선택자 (띄어쓰기)
그러니 (띄어쓰기)는 조심! */ 

a {
   text-decoration: none;
}
/* 태그는 광범위해서 보통은 이름 지어주고 사용함 */

#resume{
    width: 500px;
    margin: 0 auto;
}
/* margin 바깥여백 
resume{
    width: 500px;
    margin: 0 auto; => auto는 가운데
} 예로 margin 수가 2개면 1번째 위아래, 2번째 좌우
항상 가운데 표시, 꼭 너비 있어야함 
table 가운데로 오게 해주기 위해 씀
안쪽여백 padding 
table#resume 이렇게도 부를 수 있음
#resume.t1 이것도 가능(class 붙이기도 하지만 보통 그렇게까지 하진 않음*/

#resume tr:nth-child(2n)>td {
   background-color: aliceblue;
}


.title{
    text-align: right;
    padding-right: 10px;
}

.intro{
    font-size: 12px;
    text-align: right;
    vertical-align: ;
}
/* font-size: 12px; 글씨 사이즈
text-align 수평정렬
table에는 vertica-align 웬만한 태그에서 적용 안됨
 */

 .need{
    border-color: red;
    border-width: 3px;
    /* border: 3px solid red; shorthand 위 사항을 이렇게 짧게 쓸 수 있음 */
    border-radius: 8px;
 }
 .need:focus{
    outline: none;
 }
 /* input 선 2개, 화면 보이는 곳, 클릭했을 때 커서 들어가있는 포커스 상태
 아웃|? border 1개 있음
 검은색 테두리 안보이게.need:focus{
    outline: none;
 }
 naver 검색창 input 하나가 앙닌 div 여러개로 만듦
 border-width: 3px; 굵기 1부터
 자꾸 px 까먹는다!! 꼭 기입!
 }border-radius: 8px; 텍스트 둥글게, border쓰는 곳 다 쓸 수 있음
 focus ↔ 블러 처리
 :(콜론)이것은 가상 클래스 라고 부른다. 우리말로 상태, ~했을 때
 ex) :hover.
 */

 /* 속성선택자 
 속성에서 name이 or type이 ... ~한 석*/

 select[name=part]{
    width: 172px;
 }

 input[type=date]{
    width: 172px;
    font-size: 20px;
 }

 input[type=number]{
    width: 70px;
 }

 #selfIntro{
    width: 350px;
    height: 150px;
    resize: none; /*있어야지 사이즈 변경되지 않음*/
    overflow: hidden; /*스크롤 없애기*/
}